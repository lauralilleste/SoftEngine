<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="build">
	<property file="build.properties" />

	<!-- Definitions of variables used during the rest of this script -->

	<property name="build.dir" value="${basedir}/build" />
	<property name="build.classes.dir" value="${build.dir}/classes" />
	<property name="build.test.dir" value="${build.dir}/test" />

	<property name="src.dir" value="${basedir}/src" />
	<property name="test.dir" value="${basedir}/test" />
	<property name="dist.dir" value="${build.classes.dir}/jar" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="lib.hibernate.dir" value="${lib.dir}/hibernate" />
	<property name="data.dir" value="${basedir}/data" />
	<property name="version.properties" value="${conf.dir}/version.properties" />

	<property name="db.file" value="${data.dir}/POSdb" />
	<property name="db.alias" value="POS" />
	<property name="db.url" value="jdbc:hsqldb:hsql://localhost/POS" />

	<!-- Definitions of classpath variants used for different tasks -->

	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="run.classpath">
		<pathelement location="${build.classes.dir}" />
		<pathelement location="${conf.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build.classes.dir}" />
		<pathelement location="${build.test.dir}/" />
		<pathelement location="${conf.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar" />
		</fileset>
	</path>


	

	<!-- Definitions of runnable ant targets -->

	<target name="clean" description="Clean up build system results">
		<delete dir="${build.dir}" />
	</target>

	<target name="init" depends="clean" description="Initialize">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.test.dir}" />
	</target>

	<target name="build" depends="init" description="Build the system">
		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern"
			target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
		</javac>
	</target>



	<target name="dist" depends="build" description="Make a project jar file">
		<antcall target="revision"></antcall>
		<mkdir dir="${dist.dir}" />
		<copy todir="${dist.dir}">
			<fileset dir="." includes="lib/ conf/ etc/ data/*.properties data/*.script" />
		</copy>
		<jar destfile="${dist.dir}/SoftEngine.jar" basedir="${build.classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.SoftEngine.Intro" />
				<attribute name="Class-Path" 
					value=". ${manifest.classpath.lib} ${manifest.classpath.lib.hibernate} ./conf/" />
			</manifest>
		</jar>
	</target>

	

	<target name="jrun" depends="dist" description="Runs the jar file">
		<mkdir dir="${dist.dir}"/>
					<propertyfile file="resources/version.properties">
						<entry key="build.revision.number" type="int" default="0" operation="+" pattern="00"/>
					</propertyfile>
					<property file="resources/version.properties"/>
					<propertyfile file="resources/version.properties">
						<entry key="build.number" value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
					</propertyfile>
					<jar destfile="${dist.dir}/${SoftEngine}.jar">
						<fileset dir="${build.classes.dir}"/>
						<fileset dir="${basedir}" 
							includes="log4j2.xml"/>
						<fileset dir="${basedir}" 
							includes="**.properties"/>
						<zipgroupfileset dir="lib">
							<include name="*.jar"/>
						</zipgroupfileset>
						
						<manifest>
							<attribute name="Intro" value="${Intro.class}"/>
						</manifest>
					</jar>
	</target>

	<target name="run" depends="build" description="Run the template application">
		<java classname="ee.ut.math.tvt.SoftEngine.Intro" classpathref="run.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg
				value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
		</java>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.SoftEngine.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>
	<!-- Test  -->
	<target name="build-tests" depends="build" description="Build the system">
		<javac srcdir="${test.dir}" destdir="${build.test.dir}" debug="true" debuglevel="lines,vars,source" encoding="utf-8" compiler="modern"
			target="1.7" source="1.7" includeantruntime="false">
			<classpath refid="compile.classpath" />
			<classpath>
				<pathelement path="${build.classes.dir}" />
			</classpath>
		</javac>
	</target>
	<target name="test" depends="build-tests" description="Run the template application">
		<junit>
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${build.test.dir}" includes="**/*.class" />
			</batchtest>
		</junit>
	</target>

	<!-- Git  -->

	<macrodef name="git">
			<attribute name="command" />
			<attribute name="dir" default="" />
			<element name="args" optional="true" />
			
			<sequential>
				<echo message="git @{command}" />
				<exec executable="git" dir="@{dir}">
					<arg value="@{command}" />
					<args/>
				</exec>
			</sequential>
		</macrodef>

		<target name="git_commit" description="Commits all changes to version git">
			<input message="Your comment for commit here" addproperty="commit-message" />
			<echo message="Commiting all changes with message ${commit-message}" />
			
			<git command="add">
				<args>
					<arg value="-A" />
				</args>
			</git>
			<git command="commit">
				<args>
					<arg value="-m ${commit-message}" />
				</args>
			</git>
			<git command="push" />
				<args>
							<arg value="https://${username}:${password}@github.com/lauralilleste/SoftEngine.git" />
							
					</args>
		</target>


		<target name="git_tag" description="New tag">
			<input message="Tag name" addproperty="tag-name" />
			<input message="Comment" addproperty="tag-comment" />
			<echo message="Tag homework ${tag-name} made" />

			<git command="tag">
				<args>
					<arg value="-a" />
					<arg value="homework_${tag-name}" />
					<arg value="-m" />
					<arg value="Homework ${tag-name}" />
				</args>
			</git>
			<git command="push">
				<args>
					<arg value="--tags" />
					<arg value="https://${username}:${password}@github.com/lauralilleste/SoftEngine.git" />
					
				</args>
			</git>
		</target>

	<!-- Database -->

	<target name="dbmanager" description="Start the HSQLDB manager">
		<java classname="org.hsqldb.util.DatabaseManagerSwing"
			classpathref="run.classpath" fork="yes">
			<arg line="--user sa --url ${db.url}" />
		</java>
	</target>

	<target name="startdb" description="Start the HSQLDB with the default params">
		<java classname="org.hsqldb.Server" classpathref="run.classpath" fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" />
		</java>
	</target>
</project>
